# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    # Python36:
    #   python.version: '3.6'
    # Python37:
    #   python.version: '3.7'
    Python38:
      python.version: '3.8'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements-dev.txt
  displayName: 'Install dependencies'

- script: |
    python setup.py bdist_wheel
  displayName: 'python setup.py bdist_wheel'

- task: CopyFiles@2
  displayName: 'Copy Python Wheel to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'dist/*.whl'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- script: |
    python3 -m pip install twine keyring artifacts-keyring
  displayName: 'python3 -m pip install twine keyring artifacts-keyring'
  timeoutInMinutes: 20

# - task: TwineAuthenticate@1
#   inputs:
#     artifactFeed: 'torchort-feed'

# - script: |
#     more $(PYPIRC_PATH)
#   displayName: '$(PYPIRC_PATH)'
#   timeoutInMinutes: 1
#   condition: succeededOrFailed()

- script: |
    python3 -m twine upload -r torchort-feed --repository-url https://aiinfra.pkgs.visualstudio.com/Lotus/_packaging/torchort-feed/pypi/upload --username $(ortpypitrainingnightlyusername) --password $(aiinfrapypifeedpassword) $(Build.SourcesDirectory)/dist/*.whl
  displayName: 'python3 -m twine upload -r torchort-feed --username $(ortpypitrainingnightlyusername) --password $(aiinfrapypifeedpassword) --config-file $(PYPIRC_PATH) $(Build.SourcesDirectory)/dist/*.whl'
  timeoutInMinutes: 20
  condition: succeededOrFailed()
